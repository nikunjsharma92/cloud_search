version: '3'

services:
  masterdb:
    container_name: masterdb
    image: mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=masterdb
    volumes:
      - masterdb_volume:/var/lib/mysql

  elastic-node1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elastic-node1
    environment:
      - node.name=elastic-node1
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elastic-node2,elastic-node3
      - cluster.initial_master_nodes=elastic-node1,elastic-node2,elastic-node3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data_node1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  elastic-node2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elastic-node2
    environment:
      - node.name=elastic-node2
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elastic-node1,elastic-node3
      - cluster.initial_master_nodes=elastic-node1,elastic-node2,elastic-node3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data_node2:/usr/share/elasticsearch/data

  elastic-node3:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elastic-node3
    environment:
      - node.name=elastic-node3
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elastic-node1,elastic-node2
      - cluster.initial_master_nodes=elastic-node1,elastic-node2,elastic-node3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data_node3:/usr/share/elasticsearch/data

  tika:
    image: apache/tika:latest
    container_name: tika
    ports:
      - 9998:9998

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis_volume:/data

  api_server:
    container_name: api_server
    build:
      context: .
      dockerfile: api_server.Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    links:
      - masterdb
      - elastic-node1
      - elastic-node2
      - elastic-node3

  background_workers:
    container_name: background_workers
    build:
      context: .
      dockerfile: background_workers.Dockerfile
    env_file:
      - .env
    links:
      - api_server
      - redis
      - elastic-node1
      - elastic-node2
      - elastic-node3

volumes:
  elastic_data_node1:
    driver: local
  elastic_data_node2:
    driver: local
  elastic_data_node3:
    driver: local
  masterdb_volume:
    driver: local
  redis_volume:
    driver: local

